<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title>Dscho's blog</title>
<link>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html</link>
<atom:link href="http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=blog.rss" rel="self" type="application/rss+xml"/>
<description>A few stories told by Dscho</description>
<lastBuildDate>Sat, 24 Jan 2009 04:52:08 +0100</lastBuildDate>
<language>en-us</language>
<item>
<title>Git Logos</title>
<link>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232745071</link>
<guid>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232745071</guid>
<pubDate>Fri, 23 Jan 2009 22:11:11 +0100</pubDate>
<description><![CDATA[Git Logos
</p><p>
The other day, when I did not exactly have too much time on my hands, but
definitely too much motivation, I played around creating several logos:
</p><p>
<center>
	<table border=0>
		<tr>
			<td align=center>
				<embed type="image/svg+xml"
					src="dscho.git?a=blob_plain;hb=blog;f=git-ambigram.svg" width=317 />
			</td>
		</tr>
		<tr>
			<td align=center>
				<a href=dscho.git?a=blob_plain;hb=blog;f=git-ambigram.svg>git-ambigram.svg</a>
			</td>
		</tr>
	</table>
</center>
</p><p>
<center>
	<table border=0>
		<tr>
			<td align=center>
				<embed type="image/svg+xml"
					src="dscho.git?a=blob_plain;hb=blog;f=gitlogo.svg" width=165 />
			</td>
		</tr>
		<tr>
			<td align=center>
				<a href=dscho.git?a=blob_plain;hb=blog;f=gitlogo.svg>gitlogo.svg</a>
			</td>
		</tr>
	</table>
</center>
</p><p>
<center>
	<table border=0>
		<tr>
			<td align=center>
				<embed type="image/svg+xml"
					src="dscho.git?a=blob_plain;hb=blog;f=original-git-logo.svg" width=165 />
			</td>
		</tr>
		<tr>
			<td align=center>
				<a href=dscho.git?a=blob_plain;hb=blog;f=original-git-logo.svg>original-git-logo.svg</a>
			</td>
		</tr>
	</table>
</center>
</p><p>
<center>
	<table border=0>
		<tr>
			<td align=center>
				<embed type="image/svg+xml"
					src="dscho.git?a=blob_plain;hb=blog;f=git-gitk-logo.svg" width=325 />
			</td>
		</tr>
		<tr>
			<td align=center>
				<a href=dscho.git?a=blob_plain;hb=blog;f=git-gitk-logo.svg>git-gitk-logo.svg</a>
			</td>
		</tr>
	</table>
</center>
</p><p>
<center>
	<table border=0>
		<tr>
			<td align=center>
				<embed type="image/svg+xml"
					src="dscho.git?a=blob_plain;hb=blog;f=git-visual-test.svg" width=325 />
			</td>
		</tr>
		<tr>
			<td align=center>
				<a href=dscho.git?a=blob_plain;hb=blog;f=git-visual-test.svg>git-visual-test.svg</a>
			</td>
		</tr>
	</table>
</center>
</p><p>
Maybe some of you have fun with it...]]></description>
</item>
<item>
<title>How to deal with files that are not source code when merging</title>
<link>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232742582</link>
<guid>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232742582</guid>
<pubDate>Fri, 23 Jan 2009 21:29:42 +0100</pubDate>
<description><![CDATA[How to deal with files that are not source code when merging
</p><p>
Last week, one of the mentors of last year's <a href=http://code.google.com/soc>
Summer of Code</a> mentioned the idea that merge strategies are in dear need
for file types other than source code.
</p><p>
I think this idea is awesome, even if I cannot bring myself to believe that
any of the file types would make a good Summer of Code project: either they
are too complicated (think raster images such as .png or even .jpg), or they
are too straight-forward (think LaTeX, where all that is needed is a good
graphical user interface to inspect the three versions: <i>ours</i>, <i>baseline</i>
and <i>theirs</i>).
</p><p>
The LaTeX idea would be a good project for me to mentor, though: I have a
pretty clear idea how it should be done; I just lack the time (and motivation)
to do it myself.
</p><p>
As for OpenOffice text documents, vector graphics (such as .svg), or more
specific data such as spreadsheets, I think that all of these are really
difficult: the problem is not so much the implementation (i.e. the programming
part of it), but the design.
</p><p>
This design should involve much more than a Summer of Code project is about:
you would need to survey users' expectations, and at least the mentor -- if
not the student -- would need to be an expert in usability questions, which
is rather unlikely in the realm of Open Source.
</p><p>
Maybe this is the missing part in Open Source: we have many brilliant
programmers, but next to nobody with a good idea how to design intuitive
user interfaces.
</p><p>
That might be related to the fact that brilliant software engineers, as they
can be found in Open Source, are not exactly known for their social skills,
a human trait that seems to be a very important prerequisite for designing
intuitive user interfaces.
</p><p>
Well, I have <a href=http://git.or.cz/gitwiki/SoC2009Ideas#head-6188833471f79f277e162ef9fbe1592aa10b5f6c>
added</a> the proposal to Git's Summer of Code idea page on the Git Wiki; We will
see what comes out of it.]]></description>
</item>
<item>
<title>The UGFWIINI contest</title>
<link>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232626236</link>
<guid>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232626236</guid>
<pubDate>Thu, 22 Jan 2009 13:10:36 +0100</pubDate>
<description><![CDATA[The UGFWIINI contest
</p><p>
Just in case somebody finds this blog, here is a challenge.  Inspired by my
own little hack (this blog), I announce the "Using Git For What It Is Not
Intended" contest.
</p><p>
And it is especially cool, since the acronym sounds cool!  You might miss
this fact if you do no know that I pronounce the "F" like an "A" so that
it sounds cool.
</p><p>
This will be a running contest; whenever I have 10 valid applications, I
will announce a winner on the Git mailing list.
</p><p>
So, what accounts for a valid application?
</p><p>
<ul>
<li> You must use a Git program (the term is used loosely here, GitWeb is
     considered a Git program, for example).
<li> The program must be intended for something completely different than
     what you are using it for.  E.g. GitWeb -- which was intended to let
     you browse through the history using your web browser -- is used
     to serve a blog to the wide world.
<li> You must be able to prove that you actually used the Git program to
     the purpose you claim, preferably in a live demonstration like this
     one.
<li> Nobody and nothing must be harmed in the process (except your
     laughing muscle, that's okay).
</ul>
</p><p>
So, how does such an abuse look like?
</p><p>
<ul>
<li> ... like this blog.
<li> Managing your mail (in maildir format) in a Git repository.
<li> Finding duplicate files by
<table
				border=1 bgcolor=white>
			<tr><td bgcolor=lightblue colspan=3>
				&nbsp;
			</td></tr>
			<tr><td>
				<table cellspacing=5 border=0
					 style="color:black;">
				<tr><td>
					<pre>
$ git init
$ git add .
$ git ls-files --stage | sort -k2 | uniq -d -s7 -w40
		</pre>
				</td></tr>
				</table>
			</td></tr>
			</table>
<li> Abusing the Git alias mechanism to call scripts defined directly in
     the config.
</ul>
</p><p>
I am really looking forward to all of your submissions... *chuckles*
</p><p>]]></description>
</item>
<item>
<title>Top-posting</title>
<link>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232611542</link>
<guid>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232611542</guid>
<pubDate>Thu, 22 Jan 2009 09:05:42 +0100</pubDate>
<description><![CDATA[Top-posting
</p><p>
Okay, last post for a while.  But this is something that is nagging me
tremendously.  I should probably just let go, but in my deepest inner self,
really close to my heart, I refuse to believe that any human beings could
be incapable of certain degrees of reason.
</p><p>
Take the example of top-posting.  Everybody who read a top-posted email
knows that you have to scroll down, possibly weeding through tons of
pages to find out what the heck the author of the last reply was replying
to.
</p><p>
Never mind that it would take the author of the reply just a couple of
seconds to remove all the irrelevant stuff -- as she already knows what
is the relevant part, saving minutes, in case of mailing lists hours,
easily, to the readers who otherwise would have to discern what is
irrelevant and what is relevant first.
</p><p>
It is a horrible time waste.  But of course not for the top-poster.
</p><p>
The problem is that I frequently run into such people, and when I write
them a polite mail, explaining to them that it is impolite to top-post,
and why, the answers I get sometimes make me check if the sky is still up
and the earth down.  Yesterday was an example of such a dubitable
pleasure.
</p><p>
Most funny are the ridiculous attempts by those persons at explaining why
top-posting is <i>so</i> much superior to anything else.
</p><p>
Which is good, because if they were not that funny, they would be pretty sad.]]></description>
</item>
<item>
<title>Sverre's hat</title>
<link>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232607201</link>
<guid>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232607201</guid>
<pubDate>Thu, 22 Jan 2009 07:53:21 +0100</pubDate>
<description><![CDATA[Sverre's hat
</p><p>
The fun part about a blog is that you can talk about less technical stuff.
For example, Sverre's hat.
</p><p>
Let me start a bit earlier, so that you get the context.
</p><p>
Last year, at the <a href=http://git.or.cz/gitwiki/GitTogether>GitTogether</a>,
we had an <a href=http://en.wikipedia.org/wiki/Unconference>unconference style
conference</a>, which basically meant that it was our job to decide what
we want to talk about.
</p><p>
It turned out to be pretty hard, because there was so much we wanted to
discuss, and because we wanted to get to know each other, and we wanted to
do some hacking.
</p><p>
So to help us decide what subjects, and in which order we wanted to have
scheduled, Shawn opened a series on <a href=http://moderator.appspot.com/>
Google Moderator</a>, a nifty, yet simple application which allows a group
to agree quickly on an agenda.
</p><p>
It worked quite well; However, that little saboteur displayed his sense of
humor so overtly that some entertaining Gitter put the question "Should Sverre
wear a hat?" on the agenda.
</p><p>
Sure enough, the subject got voted up, and eventually, we got Sverre a hat:
</p><p>
<center><img src=dscho.git?a=blob_plain;hb=blog;f=sverre-hat.jpg></center>
</p><p>
By the way, another thing I like about this blog engine is that there are no
comments...  Nothing is more annoying than leaving a comment on a blog,
forgetting about it for a few months, and then finding somebody answered
ages ago.
</p><p>
Update: Sverre says it was dsymonds idea.]]></description>
</item>
<item>
<title>Let there be images!</title>
<link>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232604722</link>
<guid>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232604722</guid>
<pubDate>Thu, 22 Jan 2009 07:12:02 +0100</pubDate>
<description><![CDATA[Let there be images!
</p><p>
One of the most important features of blogs is the ability to insert images.
So what would this blog be, if it could not present something that says
more than a thousand words?
</p><p>
So here it goes, my first picture in this blog, taken from my Google Tech
Talk in Mountain View:
</p><p>
<center><img src=dscho.git?a=blob_plain;hb=blog;f=all-your-rebase.png></center>
</p><p>
Now this blog starts to look like a real blog...]]></description>
</item>
<item>
<title>My blog has style</title>
<link>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232599693</link>
<guid>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232599693</guid>
<pubDate>Thu, 22 Jan 2009 05:48:13 +0100</pubDate>
<description><![CDATA[My blog has style
</p><p>
It is official.  The blog has a style sheet now.
</p><p>
The major problem was how to design the system such that it would work
both locally and on <a href=http://repo.or.cz>repo.or.cz</a> via gitweb.
</p><p>
Basically, I realized that I'd need a dry run mode anyway, to prevent
all my failed attemp.. oops, I meant, to prevent an accidental push
when I am at an, ahem, intermediate state of the 'blog' branch.
</p><p>
Therefore, I could write a different file locally, which I can load
into my venerable Firefox.
</p><p>
The next plans with my new toy are to enable an easy way to support
showing images, and then maybe a table of contents.  External links
would be cool (<a href=http://repo.or.cz>repo.or.cz</a> does not count, it is special-cased), too.
</p><p>
And later maybe a cut-off, with automatic generation of links to older
posts.  Hmm, for those, I'll have to change the URL to include the
current commit name, so that the images will be found, too...
</p><p>
Which in turn means that I'll have to parse the source for new
images first, so that they can be in the commit that index.html
will link to, <u>before</u> it gets committed.  Oh well, that cannot be
helped! &#x263a;]]></description>
</item>
<item>
<title>My new blog system... bloGit</title>
<link>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232589695</link>
<guid>http://repo.or.cz/w/git/dscho.git?a=blob_plain;hb=blog;f=index.html#1232589695</guid>
<pubDate>Thu, 22 Jan 2009 03:01:35 +0100</pubDate>
<description><![CDATA[My new blog system... bloGit
</p><p>
Nowadays, you got to have your blog.  Or better: your blogs.  Even Junio
blogs about Git.
</p><p>
So I felt a little left behind, having no blog to show off.  But then
I read about this fantastic new website on the mailing list, called
<i>git planet</i> which was supposed to be a place where you could have your
Git located blog.
</p><p>
Except that you could not have your blog <u>there</u>.  Instead, it is just an
aggregator site.
</p><p>
I was disappointed.
</p><p>
But then, I had this (in my humble opinion very cute) idea that I already used to "publish"
my slides from the talk "Contributing with Git (AKA All your rebase are
belong to us)": back then, I just created a new branch, committed the
file, and uploaded the result to <a href=http://repo.or.cz>repo.or.cz</a>, to be downloaded via Gitweb.
</p><p>
So I asked Pasky via IRC, if he would have any objections if I abused
<a href=http://repo.or.cz>repo.or.cz</a> as a blog server.  He understood at once, and found it "sounds
like a pretty cool idea".
</p><p>
Of course, just writing plain HTML and committing that is <i>too easy</i>,
therefore I decided to write a shell script that would turn some sort
of simple text file into proper HTML, commit it, and upload the result.
</p><p>
Well, about two hours later, I finished the first version of the script
turning plain text with minimal markup into an HTML page, and it obviously
worked -- otherwise nobody would be able to read this &#x263a;]]></description>
</item>
</channel>
</rss>
