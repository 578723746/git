Ideas for a major revamp of the ''--preserve-merges'' handling in ''git rebase''

As probably everybody agrees, the code to preserve merges is a big mess 
right now.

Worse, the whole concept of "pick <merge-sha1>" just does not fly well.

So I started a _major_ cleanup, which happens to reduce the code very 
nicely so far.

It will take a few days to flesh out, I guess, but these are the major 
ideas of my work:

<b>pick $sha1</b><br>
<blockquote>will only work on non-merges in the future.</blockquote>
<b>merge $sha1 [$sha1...] was $sha1 Merge ...</b><br>
<blockquote>will merge the given list of commits into the current HEAD, for 
	the user's reference and to keep up-to-date what was rewritten, 
	the original merge is shown after the keyword "was" (which is not 
	a valid SHA-1, luckily).</blockquote>
<b>goto $sha1</b><br>
<blockquote>will reset the HEAD to the given commit.</blockquote>
<b>$sha1'</b><br>
<blockquote>for merge and goto, if a $sha1 ends in a single quote, the 
	rewritten commit is substituted (if there is one).</blockquote>

Example:

<pre>
A - B - - - E 
  \       /
    C - D
</pre>

could yield this TODO script:

<pre>
	pick A
	pick C
	pick D
	goto A'
	pick B
	merge D' was E
</pre>

This should lead to a much more intuitive user experience.

I am very sorry if somebody actually scripted ''rebase -i -p'' (by setting 
GIT_EDITOR with a script), but I am very certain that this cleanup is 
absolutely necessary to make ''rebase -i -p'' useful.
