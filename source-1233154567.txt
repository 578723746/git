Splitting topic branches

One might be put off easily by the overarching use of buzzwords in the
description of how ''Darcs'' works.  I, for one, do not expect an intelligent
author when I read ''Theory of patches'' and ''based on quantum physics''.

The true story, however, is much simpler, and is actually not that dumb:
Let's call two commits "conflicting" when they contain at least one
overlapping change.

The idea is now: Given a list of commits (not a set, as the order is important),
to sort them into smaller lists such that conflicting commits are in the
sublists ("topic branches") and the sublists are minimal, i.e. no two
non-conflicting commits are in the same sublist.

The idea has flaws, of course, as you can have a patch changing the code,
and another changing the documentation, but splitting a list of commits
in that way is a first step to sort out my ''my-next'' mess, where I have
a linear perl of not-necessarily-dependent commits.

And actually, my whole rebase revamp aimed at the clean-up for my own
''my-next'' branch, so I am currently writing a script that can be used
as a GIT_EDITOR for git-rebase which implements the Darcs algorithm.  Kind of:
the result is not implicit, but explicit and can be fixed up later.
